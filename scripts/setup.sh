#!/bin/bash

# ===========================================
# VEO7 Video Platform - Setup Script
# ===========================================

set -e

echo "๐ ุจุฏุก ุฅุนุฏุงุฏ ููุตุฉ VEO7..."

# ุฃููุงู ูููุตูุต
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# ุฏุงูุฉ ูุทุจุงุนุฉ ุงูุฑุณุงุฆู ุงูููููุฉ
print_message() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

# ุงูุชุญูู ูู ุงููุชุทูุจุงุช ุงูุฃุณุงุณูุฉ
check_requirements() {
    print_step "ุงูุชุญูู ูู ุงููุชุทูุจุงุช ุงูุฃุณุงุณูุฉ..."
    
    # ุงูุชุญูู ูู Node.js
    if ! command -v node &> /dev/null; then
        print_error "Node.js ุบูุฑ ูุซุจุช. ูุฑุฌู ุชุซุจูุช Node.js 18 ุฃู ุฃุญุฏุซ."
        exit 1
    fi
    
    NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VERSION" -lt 18 ]; then
        print_error "ูุชุทูุจ Node.js ุงูุฅุตุฏุงุฑ 18 ุฃู ุฃุญุฏุซ. ุงูุฅุตุฏุงุฑ ุงูุญุงูู: $(node -v)"
        exit 1
    fi
    
    # ุงูุชุญูู ูู Python
    if ! command -v python3 &> /dev/null; then
        print_error "Python 3 ุบูุฑ ูุซุจุช. ูุฑุฌู ุชุซุจูุช Python 3.11 ุฃู ุฃุญุฏุซ."
        exit 1
    fi
    
    # ุงูุชุญูู ูู Docker (ุงุฎุชูุงุฑู)
    if command -v docker &> /dev/null; then
        print_message "Docker ูุชููุฑ โ"
    else
        print_warning "Docker ุบูุฑ ูุซุจุช. ุณุชุญุชุงุฌ ุฅููู ูููุดุฑ."
    fi
    
    print_message "ุฌููุน ุงููุชุทูุจุงุช ูุชููุฑุฉ โ"
}

# ุฅูุดุงุก ูููุงุช ุงูุจูุฆุฉ
setup_environment() {
    print_step "ุฅุนุฏุงุฏ ูููุงุช ุงูุจูุฆุฉ..."
    
    # ูุณุฎ ููู ุงูุจูุฆุฉ ุงูุฑุฆูุณู
    if [ ! -f .env ]; then
        cp .env.example .env
        print_message "ุชู ุฅูุดุงุก ููู .env"
    else
        print_warning "ููู .env ููุฌูุฏ ุจุงููุนู"
    fi
    
    # ูุณุฎ ููู ุงูุจูุฆุฉ ููู Frontend
    if [ ! -f frontend/.env.local ]; then
        cp .env.example frontend/.env.local
        print_message "ุชู ุฅูุดุงุก ููู frontend/.env.local"
    else
        print_warning "ููู frontend/.env.local ููุฌูุฏ ุจุงููุนู"
    fi
    
    # ูุณุฎ ููู ุงูุจูุฆุฉ ููู Backend
    if [ ! -f backend/.env ]; then
        cp .env.example backend/.env
        print_message "ุชู ุฅูุดุงุก ููู backend/.env"
    else
        print_warning "ููู backend/.env ููุฌูุฏ ุจุงููุนู"
    fi
}

# ุฅุนุฏุงุฏ Frontend
setup_frontend() {
    print_step "ุฅุนุฏุงุฏ Frontend..."
    
    cd frontend
    
    print_message "ุชุซุจูุช ุชุจุนูุงุช Frontend..."
    npm install
    
    print_message "ุจูุงุก Frontend..."
    npm run build
    
    cd ..
    print_message "ุชู ุฅุนุฏุงุฏ Frontend ุจูุฌุงุญ โ"
}

# ุฅุนุฏุงุฏ Backend
setup_backend() {
    print_step "ุฅุนุฏุงุฏ Backend..."
    
    cd backend
    
    # ุฅูุดุงุก ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถูุฉ
    if [ ! -d "venv" ]; then
        print_message "ุฅูุดุงุก ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถูุฉ..."
        python3 -m venv venv
    fi
    
    # ุชูุนูู ุงูุจูุฆุฉ ุงูุงูุชุฑุงุถูุฉ
    source venv/bin/activate
    
    # ุชุซุจูุช ุงููุชุทูุจุงุช
    print_message "ุชุซุจูุช ุชุจุนูุงุช Backend..."
    pip install --upgrade pip
    pip install -r requirements.txt
    
    # ุฅูุดุงุก ุงููุฌูุฏุงุช ุงููุทููุจุฉ
    mkdir -p uploads outputs temp
    
    cd ..
    print_message "ุชู ุฅุนุฏุงุฏ Backend ุจูุฌุงุญ โ"
}

# ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช
setup_database() {
    print_step "ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช..."
    
    print_warning "ูุฑุฌู ุงูุชุฃูุฏ ูู ุฅุนุฏุงุฏ Supabase ูุชุดุบูู ูููุงุช SQL ุงูุชุงููุฉ:"
    echo "  - backend/database/schema.sql"
    echo "  - backend/database/seed.sql"
    
    print_message "ููููู ุชุดุบูููุง ูู Supabase SQL Editor"
}

# ุฅูุดุงุก ุดูุงุฏุงุช SSL ููุชุทููุฑ
setup_ssl() {
    print_step "ุฅูุดุงุก ุดูุงุฏุงุช SSL ููุชุทููุฑ..."
    
    mkdir -p nginx/ssl
    
    if [ ! -f nginx/ssl/cert.pem ]; then
        print_message "ุฅูุดุงุก ุดูุงุฏุฉ SSL ุฐุงุชูุฉ ุงูุชูููุน..."
        openssl req -x509 -newkey rsa:4096 -keyout nginx/ssl/key.pem -out nginx/ssl/cert.pem -days 365 -nodes -subj "/C=SA/ST=Riyadh/L=Riyadh/O=VEO7/CN=localhost"
        print_message "ุชู ุฅูุดุงุก ุดูุงุฏุงุช SSL โ"
    else
        print_warning "ุดูุงุฏุงุช SSL ููุฌูุฏุฉ ุจุงููุนู"
    fi
}

# ุฅูุดุงุก ุณูุฑูุจุชุงุช ุงูุชุดุบูู
create_scripts() {
    print_step "ุฅูุดุงุก ุณูุฑูุจุชุงุช ุงูุชุดุบูู..."
    
    # ุณูุฑูุจุช ุชุดุบูู ุงูุชุทููุฑ
    cat > start-dev.sh << 'EOF'
#!/bin/bash
echo "๐ ุจุฏุก ุชุดุบูู VEO7 ูู ูุถุน ุงูุชุทููุฑ..."

# ุชุดุบูู Backend
cd backend
source venv/bin/activate
uvicorn main:app --reload --host 0.0.0.0 --port 8000 &
BACKEND_PID=$!
cd ..

# ุชุดุบูู Frontend
cd frontend
npm run dev &
FRONTEND_PID=$!
cd ..

echo "โ ุชู ุชุดุบูู ุงูุชุทุจูู:"
echo "   Frontend: http://localhost:3000"
echo "   Backend: http://localhost:8000"
echo "   API Docs: http://localhost:8000/docs"

# ุงูุชุธุงุฑ ุฅููุงู ุงูุนูููุงุช
wait $BACKEND_PID $FRONTEND_PID
EOF

    chmod +x start-dev.sh
    
    # ุณูุฑูุจุช ุชุดุบูู ุงูุฅูุชุงุฌ
    cat > start-prod.sh << 'EOF'
#!/bin/bash
echo "๐ ุจุฏุก ุชุดุบูู VEO7 ูู ูุถุน ุงูุฅูุชุงุฌ..."

# ุงูุชุญูู ูู Docker
if ! command -v docker-compose &> /dev/null; then
    echo "โ Docker Compose ุบูุฑ ูุซุจุช"
    exit 1
fi

# ุชุดุบูู ุงูุฎุฏูุงุช
docker-compose up -d

echo "โ ุชู ุชุดุบูู ุงูุชุทุจูู:"
echo "   Application: https://localhost"
echo "   HTTP: http://localhost:8080"
EOF

    chmod +x start-prod.sh
    
    print_message "ุชู ุฅูุดุงุก ุณูุฑูุจุชุงุช ุงูุชุดุบูู โ"
}

# ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main() {
    echo "================================================"
    echo "๐ฌ VEO7 Video Platform - Setup Script"
    echo "================================================"
    echo ""
    
    check_requirements
    setup_environment
    setup_frontend
    setup_backend
    setup_database
    setup_ssl
    create_scripts
    
    echo ""
    echo "================================================"
    echo "โ ุชู ุฅุนุฏุงุฏ ุงููุดุฑูุน ุจูุฌุงุญ!"
    echo "================================================"
    echo ""
    echo "ุงูุฎุทูุงุช ุงูุชุงููุฉ:"
    echo "1. ูู ุจุชุญุฏูุซ ูููุงุช .env ุจุงูููู ุงูุตุญูุญุฉ"
    echo "2. ุฃุนุฏ ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู Supabase"
    echo "3. ุดุบู ุงูุชุทุจูู:"
    echo "   - ููุชุทููุฑ: ./start-dev.sh"
    echo "   - ููุฅูุชุงุฌ: ./start-prod.sh"
    echo ""
    echo "๐ ูููุฒูุฏ ูู ุงููุนูููุงุชุ ุฑุงุฌุน README.md"
    echo ""
}

# ุชุดุบูู ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ
main "$@"